# Sample inputs (# note: The values given in the prefix code(grey) will be changed by the autograder according to the testcase while running them.
word1 = "Wingardium" # str
word2 = "Leviyosa" # str
word3 = "Silver" # str
sentence = "Learning python is fun"
n1 = 6 # int
n2 = 4 # int
# <eoi>

output1 = word1 + " " + word2                          # Join word1 and word2 with space
output2 = word1[:4] + "-" + word2[-4:]                 # First 4 letters of word1 + hyphen + last 4 of word2
output3 = word3 + " " + str(n1)                        # Join word3 and n1 (converted to str) with space
output4 = "-" * 50                                     # Hyphen repeated 50 times
output5 = "-" * n2                                     # Hyphen repeated n2 times
output6 = str(n1) * n2                                 # Repeat string version of n1, n2 times

# Boolean checks
are_all_words_equal = word1 == word2 == word3                         # Check if all three words are equal
is_word1_comes_before_other_two = word1 < word2 and word1 < word3     # Check lexicographical order
has_h = 'h' in word1                                                  # Check if 'h' is in word1
ends_with_a = word1.endswith('a') or word1.endswith('A')              # Check if word1 ends with 'a' or 'A'
has_the_word_python = "python" in sentence.lower().split()            # Check if "python" is a word in sentence
